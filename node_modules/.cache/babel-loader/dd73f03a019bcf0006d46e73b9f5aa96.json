{"ast":null,"code":"var _jsxFileName = \"/Users/decagon/todo-task-tracker/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport Header from \"./components/Header\";\nimport Tasks from './components/Tasks';\nimport AddTask from './components/AddTask';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [showAddTask, setShowAddTask] = useState(false);\n  const [tasks, setTasks] = useState([]); //Add task\n\n  const addTask = task => {\n    const id = Math.floor(Math.random() * 10000) + 1;\n    const newTask = {\n      id,\n      ...task\n    };\n    setTasks([...tasks, newTask]);\n  }; // function to delete task\n\n\n  const deleteTask = id => {\n    setTasks(tasks.filter(task => task.id !== id));\n  }; // function to toggle reminder\n\n\n  const toggleReminder = id => {\n    setTasks(tasks.map(task => task.id === id ? { ...task,\n      reminder: !task.reminder\n    } : task));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      onAdd: () => setShowAddTask(!showAddTask),\n      showAdd: showAddTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), showAddTask && /*#__PURE__*/_jsxDEV(AddTask, {\n      onAdd: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 23\n    }, this), tasks.length > 0 ? /*#__PURE__*/_jsxDEV(Tasks, {\n      tasks: tasks,\n      onDelete: deleteTask,\n      onToggle: toggleReminder,\n      onAdd: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this) : 'No Todo Task available to show']\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"s8LzkA5aeSm1dim22ZlWGmFnnlE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/decagon/todo-task-tracker/src/App.js"],"names":["useState","Header","Tasks","AddTask","App","showAddTask","setShowAddTask","tasks","setTasks","addTask","task","id","Math","floor","random","newTask","deleteTask","filter","toggleReminder","map","reminder","length"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,OAAP,MAAoB,sBAApB;;;AAKA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAEhB,QAAK,CAACC,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAC,KAAD,CAA7C;AAEA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC,CAJgB,CAKlB;;AACE,QAAMS,OAAO,GAAIC,IAAD,IAAU;AACxB,UAAMC,EAAE,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,KAA3B,IAAoC,CAA/C;AACA,UAAMC,OAAO,GAAG;AAAEJ,MAAAA,EAAF;AAAM,SAAGD;AAAT,KAAhB;AACAF,IAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAWQ,OAAX,CAAD,CAAR;AAED,GALD,CANgB,CAclB;;;AACE,QAAMC,UAAU,GAAGL,EAAD,IAAM;AACtBH,IAAAA,QAAQ,CAACD,KAAK,CAACU,MAAN,CAAcP,IAAD,IAASA,IAAI,CAACC,EAAL,KAAYA,EAAlC,CAAD,CAAR;AACD,GAFD,CAfgB,CAmBhB;;;AACA,QAAMO,cAAc,GAAEP,EAAD,IAAM;AACzBH,IAAAA,QAAQ,CAACD,KAAK,CAACY,GAAN,CAAWT,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYA,EAAZ,GAAiB,EAAE,GAAGD,IAAL;AAAWU,MAAAA,QAAQ,EAAE,CAACV,IAAI,CAACU;AAA3B,KAAjB,GAAyDV,IAA7E,CAAD,CAAR;AAGD,GAJD;;AAMA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAE,MAAMJ,cAAc,CAAC,CAACD,WAAF,CAAnC;AAAmD,MAAA,OAAO,EAAEA;AAA5D;AAAA;AAAA;AAAA;AAAA,YADF,EAEGA,WAAW,iBAAI,QAAC,OAAD;AAAS,MAAA,KAAK,EAAEI;AAAhB;AAAA;AAAA;AAAA;AAAA,YAFlB,EAGGF,KAAK,CAACc,MAAN,GAAe,CAAf,gBACC,QAAC,KAAD;AACE,MAAA,KAAK,EAAEd,KADT;AAEE,MAAA,QAAQ,EAAES,UAFZ;AAGE,MAAA,QAAQ,EAAEE,cAHZ;AAIE,MAAA,KAAK,EAAET;AAJT;AAAA;AAAA;AAAA;AAAA,YADD,GAOI,gCAVP;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CAxCD;;GAAML,G;;KAAAA,G;AA0CN,eAAeA,GAAf","sourcesContent":["import { useState } from 'react';\nimport Header from \"./components/Header\";\nimport Tasks from './components/Tasks';\nimport AddTask from './components/AddTask';\n\n\n\n\nconst App = () => {\n\n  const[showAddTask, setShowAddTask] = useState(false)\n\n  const [tasks, setTasks] = useState([])\n//Add task\n  const addTask = (task) => {\n    const id = Math.floor(Math.random() * 10000) + 1\n    const newTask = { id, ...task }\n    setTasks([...tasks, newTask])\n\n  }\n\n  \n// function to delete task\n  const deleteTask =(id)=>{\n    setTasks(tasks.filter((task)=> task.id !== id))\n  }\n\n  // function to toggle reminder\n  const toggleReminder=(id)=>{\n    setTasks(tasks.map((task) => task.id === id ? { ...task, reminder: !task.reminder } : task\n    )\n    )\n  }\n\n  return (\n    <div className=\"container\">\n      <Header onAdd={() => setShowAddTask(!showAddTask)} showAdd={showAddTask}/>\n      {showAddTask && <AddTask onAdd={addTask}/>}\n      {tasks.length > 0 ? (\n        <Tasks\n          tasks={tasks}\n          onDelete={deleteTask}\n          onToggle={toggleReminder}\n          onAdd={addTask}\n          />\n      ) : ('No Todo Task available to show')}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}